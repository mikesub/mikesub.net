<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>Михаил Сабуренков</title>
        <link>http://mikesub.net/blog</link>
        <description>Заметки Михаила Сабуренкова</description>
        
            <item>
                <title>about:blank</title>
                <guid isPermalink="true">http://mikesub.net/blog/about_blank.html</guid>
                <link>http://mikesub.net/blog/about_blank.html</link>
                <description>&lt;p&gt;Я очень скучаю по чистой вкладке, пустой белой странице. Когда-то все браузеры при открытии вкладки показывали
чистую страницу и пользователь мог либо ввести адрес в адресную строку, либо выбрать страницу из закладок. Потом интерфейс 
стал обрастать и появился вывод истории недавних посещений, списки популярных сайтов. Гугл начал показывать по сути свою 
стартовую страницу, одно время показывал свои приложения и т.п.&lt;/p&gt;
&lt;p&gt;Одно время это было опционально, но сейчас уже в хроме настроить показ пустой страницы нельзя. Вслед за ним опера и 
яндекс также не дают такую возможность. В сафари и фаерфоксе такая опция осталась, но неизвестно надолго ли.&lt;/p&gt;
&lt;p&gt;Я держу свой рабочий стол (тот, который на компьютере) абсолютно пустым, без обоев, с одноцветной заливкой. Переключаясь
на него, я попадаю на чистый лист и из спотлайта начинаю новую задачу. Также и в браузере. Если мне операционная система 
вместо пустого десктопа будет выводить какие-нибудь списки недавно открытых файлов, популярных приложений — не знаю 
смогу ли я к этому привыкнуть, либо придется искать обходные пути отключения этой функциональности.  &lt;/p&gt;
&lt;p&gt;На написание этой заметки меня натолкнул 
&lt;a href=&quot;http://blog.flickr.net/en/2015/03/18/flickr-tab-in-google-chrome/&quot;&gt;flickr tab&lt;/a&gt;, расширение для хрома, которое в каждой новой вкладке показывает 
случайную популярную фотографию с одноименного сервиса. Я его установил в попытке избежать мусорной стартовой страницы. 
Но в результате поймал себя за тем, что открывая новый вкладку, я автоматически открываю еще одну, так как срабатывает 
рефлекс того, что я очутился не на новой вкладке, а просто переключился на какую-то старую, в которой что-то уже открыто.&lt;/p&gt;
&lt;p&gt;Ну и немного про обои рабочего стола: из-за моих настроек я долго не замечал в yosemite полупрозрачного фона боковых 
панелей, меню и прочих элементов. Из-за однотонного темносерого фона я просто считал, что всё в новой ОС тускло и 
странно. Только случайно, поставив каких-то ярких слонов на рабочий стол, я заметил эту полупрозрачность. Слонов я убрал 
и поставил крыжик в system preferences &amp;gt; accessibility &amp;gt; reduce transparency, чего всем и советую.&lt;/p&gt;
</description>
                <pubDate>26 Mar 2015 17:03 +0300</pubDate>
            </item>
        
            <item>
                <title>Гугл мой спотлайт</title>
                <guid isPermalink="true">http://mikesub.net/blog/google_my_spotlight.html</guid>
                <link>http://mikesub.net/blog/google_my_spotlight.html</link>
                <description>&lt;p&gt;В продолжение «&lt;a href=&quot;http://ilyabirman.ru/meanwhile/all/web-or-native-future/&quot;&gt;Будущего нативных и веб-приложений&lt;/a&gt;» Ильи Бирмана.&lt;/p&gt;
&lt;p&gt;Да, веб-приложения сейчас часто неудобнее нативных аналогов. На мобильных платформах это еще больше ощущается, чем 
на десктопах. Одновременно с этим то, что открывается по ссылке в браузере, далеко и давно ушло от понятия 
веб-страницы. Даже простейший блог со статьями, который, казалось бы, наиболее близок к тому, зачем придумали интернет — 
уже не список статей с перекрестными ссылками. Поиск, комментарии, админка — всё это ближе к сервису/приложению нежели 
к странице.&lt;/p&gt;
&lt;p&gt;Но разработчики веб-сервисов с одной стороны и разработчики браузеров с другой до сих расценивают интернет как список 
веб-страниц. &lt;/p&gt;
&lt;p&gt;Представьте, если бы при запуске нативного приложения, вы бы попадали на лэндинг/промо- страницу с описанием сервиса, а 
не туда, где вы остановили работу в этом приложении. В вебе такое еще можно встретить.&lt;/p&gt;
&lt;p&gt;Представьте, что ваш док приложений — список безликих иконок «программа». В вебе сейчас это так. В Apple пошли 
дальше и убрали даже фавиконки у закладок в Safari.&lt;/p&gt;
&lt;p&gt;Представьте, что каждый раз при запуске приложения вам необходимо было бы вводить логин/пароль. Такое в вебе еще встречается.
В идеале вся авторизация в вебе должна остаться в случаях, требующих дополнительной защиты. Также как в нативных 
приложениях 1Password требует дополнительную авторизацию, а почтовый клиент не требует, также и в браузере интернет-банк 
пусть требует.&lt;/p&gt;
&lt;p&gt;А теперь представьте, что вы могли бы себе в док (или из спотлайта) попасть сразу в нужную папку вашего почтового клиента 
или в нужный список reminders в обход разводящего экрана. &lt;/p&gt;
&lt;p&gt;Но мы неизбежно к этому идём и те, кто избавляются от концепции URLов в своих веб-приложениях (привет, интернет-банки),
кто по умолчанию выставляет режим «не запоминать пароль» — все они идут не в ту сторону.&lt;/p&gt;
</description>
                <pubDate>26 Mar 2015 02:03 +0300</pubDate>
            </item>
        
            <item>
                <title>Верстальщики: от программистов к дизайнерам</title>
                <guid isPermalink="true">http://mikesub.net/blog/html_designers.html</guid>
                <link>http://mikesub.net/blog/html_designers.html</link>
                <description>&lt;p&gt;Изначально HTML создавался как markdown или разметка wiki. Как сейчас нет markdown-верстальщика, word-писателя, так и
изначально не было HTML—верстальщика. Это было еще один формат разметки текста.&lt;/p&gt;
&lt;p&gt;Почти сразу HTML стали использовать не для создания документов с гиперссылками, а чего-угодно с гиперссылками.
Так появились веб-сайты: интерактивные документы, с одной стороны пытающие предоставить интерфейс по аналогии с GUI
всего остального компьютера, с другой стороны предоставить вёрстку в полиграфическом смысле. Технология этого 
не позволяла. С интерактивностью еще куда ни шло, появились веб-формы, а вот с вёрсткой (раскладка, сетки,
блоки) — с этим были большие проблемы. Но никто ничего знать не хотел и поэтому в ход шли таблицы, распорки в виде
прозрачных изображений и т.д. Собственно, из-за этого вся эта сложность, инструментария нет, есть несколько программ
(браузеров), которые воспринимают инструкции по—разному, а плохие дизайнеры показывают нарисованные макеты в растровом 
графическом формате и настаивают на своём.&lt;/p&gt;
&lt;p&gt;Поэтому выделились люди, которые могли как-то заставить браузер отрисовывать то, что нарисовал дизайнер. Cо временем, 
технологии и инструменты прогрессировали и эволюционировали, и стало возможным верстать предназначенными для этого 
средствами, а не костылями. Так ушла вёрстка таблицами, но до сих пор нет инструмента, который бы позволил полностью 
правильно сделать то, что вы рисуете. Но, конечно, ситуация гораздо лучше, чем несколько лет назад. Сейчас, если брать 
современный браузер, то, в целом, в HTML есть все нужные средства, и он опять превращается в более-менее простой 
инструмент вёрстки. В рамках прототипов/макетов на нем можно писать человеку не сильно вовлеченному во все 
эти технологии.&lt;/p&gt;
&lt;p&gt;Также сейчас с появлением AJAX-подгрузки частей страницы, возможностей анимации, адаптивного подстраивания под разные
размеры окна, всё это сложнее и сложнее умещать в плоский PSD-макет. Теперь вместе с макетом идёт документация или 
раскадровка разных состояний. Но когда перед разработчиком плоский макет, то не видно всей логики, которую
закладывал проектировщик/дизайнер: это просто два разных цвета, или этот цвет — функция от того цвета (затемнение на
20%), это 10px или это расстояние зависит от состояния вот того блока, или это какой-нибудь «стандартный отступ при
таких-то условиях» и тому подобное.&lt;/p&gt;
&lt;p&gt;То есть информация заложенная дизайнером так или иначе теряется, и приходится сажать рядом дизайнера, чтобы он объяснял
по картинке, почему где как, или писать документацию, или дробить разработку на много итераций, постоянно показывая
результат и внося в него изменения.&lt;/p&gt;
&lt;p&gt;И тут начинается самое интересное. Сейчас технология развивается, уже можно делать раскладку без использования неявных
побочных эффектов каких-либо свойств, уже можно сохранять зависимости размеров, цветов и прочего используя удобные
пре- и пост- процессоры, которые довольно по-человечески работают.&lt;/p&gt;
&lt;p&gt;И, возвращаясь к интерактивности, популярного сейчас параллакс-эффекта и т.д., win-win ситуация для проектировщика
интерфейса — когда он как минимум на одном языке разговаривает с разработчиком, и как максимум, а технологии уже
это позволяют, набрасывает какие-то прототипы, которые верстальщик уже потом доведёт до своих стандартов качества,
не забудет про всякие сложные моменты и сделает, чтобы это везде работало, как задумано.&lt;/p&gt;
&lt;p&gt;ну и конечно все эти анимации и резиновость - это тоже на статических макетах не опишешь, приходится отдельно
документацию какую-то прикладывать, которая слепая (всяко лучше самому это реализовать и увидеть как это
на самом деле в браузере будет работать).&lt;/p&gt;
&lt;p&gt;Поэтому веб-вёрстка, изначально зародившаяся как инструмент программиста, после этого выделившись в отдельную
специализацию, сейчас плавно и верно перетекает в сторону проектировщиков интерфейсов и это отлично. А верстальщики 
вместе с этим плавно перетекают либо в дизайнеров, либо в программистов и это прекрасно.&lt;/p&gt;
</description>
                <pubDate>22 Mar 2015 02:03 +0300</pubDate>
            </item>
        
    </channel>
</rss>
